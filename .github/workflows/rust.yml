name: Rust

permissions:
  contents: read

on:
  push:
    branches: [main]
    paths:
      - '**/*.rs'
      - crates/**/Cargo.toml
      - .github/workflows/rust.yml
    tags:
      - 'rf24-rs/*'
      # - 'rf24network-rs/*'
      # - 'rf24mesh-rs/*'
      # - 'rf24ble-rs/*'
  pull_request:
    branches: [main]
    paths:
      - '**/*.rs'
      - crates/**/Cargo.toml
      - .github/workflows/rust.yml

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        run: rustup update --no-self-update
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: cargo-lib-${{ hashFiles('lib/src/**', 'lib/Cargo.toml') }}
      - run: cargo clippy
      - run: cargo fmt --check

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        run: rustup update --no-self-update
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install Just
        run: cargo binstall -y just cargo-nextest cargo-llvm-cov
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: cargo-lib-${{ hashFiles('lib/src/**', 'lib/Cargo.toml') }}
      - run: rustup component add llvm-tools-preview
        # this enables a tool (for default toolchain) needed to measure code coverage.
      - name: Run tests and generate reports
        run: just test ci lcov
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  publish:
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/tags')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup update stable --no-self-update
      - run: cargo publish -p rf24-rs
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}